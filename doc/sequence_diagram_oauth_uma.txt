title Kong OAuth and UMA protection

note over admin: UMA Resource registration already happened (SECURITY)
note over admin: UMA Scopes created and associated with permissions (via oxTrust)

admin->konga: Add API
konga->kong Admin API: Request /api endpoint to add API
kong Admin API->konga: Return api_id
konga->admin:  Display API details

admin->konga: Add gluu-oauth2-client-auth plugin
konga->kong Admin API: Request /api/api_id/plugin endpoint to add gluu-oauth2-client-auth plugin
kong Admin API->oxdweb: Create client using setup_client
oxdweb->kong Admin API: Return oxd_id, client_id, client_secret
kong Admin API->kong Admin API: Store oxd_id, client_id, client_secret in gluu-oauth2-client-auth global config
kong Admin API->konga: Return api_plugin_id, oxd_id, client_id, client_secret
konga->admin:  Display plugin details

admin->konga: Create new consumer
konga->kong Admin API: Create new consumer Example: foo
kong Admin API->konga: Return consumer name, consumer id
konga->admin:  Return consumer name, consumer id

developer->client: Create mobile/web app
developer->admin: request client creds

admin->konga: Create oauth2-consumer with above consumer id
konga->kong Admin API: Request /gluu-oauth2-consumer/[consumer_id] endpoint
kong Admin API->oauth2-plugin: Request /gluu-aouth2-consumer/[consumer_id]
oauth2-plugin->oxd-web: setup_client
oxd-web<->OP: client reg
oxd-web->oauth2-plugin: success:oxd_id, client_id and client_secret
oauth2-plugin->oauth2-plugin: Add oxd_id, client_id, client_secret data in oauth2-consumer
oauth2-plugin->kong Admin API: success
kong Admin API->konga: success:oxd_id, client_id and client_secret
konga->admin: Display oxd_id, client_id and client_secret

admin->developer: Send client_id and client_secret
developer->client: Add client creds
client->OP: request token (client credential grant)
OP->client: token AT
client->Kong Proxy: call API  with header Authorization: Bearer AT
opt push claim tokens
    client->Kong Proxy: Add Header "UMA Data": {"claim_token":"...","claim_token_format":"..."}
end
Kong Proxy->oauth2-plugin: *****  call "access" event for Kong plugin priority 998 *****
oauth2-plugin->Kong-Cache: Lookup value of Authorization Header bearer token
Kong-Cache->oauth2-plugin: token JSON {"consumer": "foo", ...}

opt AT not in kong-cache
    oauth2-plugin->oxd-web: Introspect AT at OAuth Introspection endpoint using global oxd_id
    oxd-web<->OP:
    OPT AT not found
        oauth2-plugin->oxd-web: Introspect RPT at token introspection endpoint using global oxd_id
        oauth2-plugin<->Kong-Cache: Write: {"RPT":{"cliend_id":"", "consumer": "bar", "expires":"..."}, "type": "uma"}
    end
    opt token still not found
       oauth2-plugin->client: Unauthorized 401
    end
    oxd-web->oauth2-plugin: AT JSON
    oauth2-plugin->oauth2-plugin: Fetch oauth2-consumer using above AT JSON(client_id)
    opt is_oauth_token
        opt active
            oauth2-plugin<->Kong-Cache: Write: {"AT":{"cliend_id":"", "consumer": "foo", "oxd-id": "...", "expires":"..."}, "type": "oauth", "rpt":"RPT"}
        end
        opt inactive
            oauth2-plugin->client: Unauthorized 401
        end
    end
end

opt kong_acts_as_uma_client Enabled and RPT Present
    oauth2-plugin->oauth2-plugin: REPLACE Header | Authorization: Bearer RPT
end

opt kong_acts_as_uma_client Disabled
    opt AT token expiration < now
        oauth2-plugin->client: Unauthorized 401
    end
end

Kong Proxy->uma-rs-plugin: ***** call "access" event for Kong plugin priority 999  *****
uma-rs-plugin->uma-rs-plugin: Get RPT from Authorization Header
opt no token present
    uma-rs-plugin->Kong Proxy: 401 unauthorized / Permission Ticket
end
opt token present
    uma-rs-plugin->Kong-Cache: Lookup bearer token
    Kong-Cache->uma-rs-plugin: JSON

    opt token in cache, but is OAuth2 AT
        uma-rs-plugin->Kong Proxy: 401 unauthorized / Permission Ticket
    end

    opt token not found in cache
        uma-rs-plugin->oxd-web: call check_access(token)
        oxd-web<->OP:
        opt check_access granted
            uma-rs-plugin->Kong-Cache: {"RPT": {"path":"/profile", "methods": ["GET", "POST"]}
        end
        opt check_access denied
            uma-rs-plugin->client: 401/Unauthorized
        end
    end

    opt RPT token in cache, RPT has already been issued for this path/method
        Kong Proxy->API: Send request
        API->Kong Proxy: Content
        Kong Proxy->client: Content
    end

end

Kong Proxy->oauth2-plugin: *****  call "header_filter" event for Kong plugin priority 998 *****
opt HTTP response 401
    opt kong_acts_as_uma_client disabled
       oauth2-plugin->client: 401 Unauthorized
    end

    oauth2-plugin-> oauth2-plugin: Get ticket from WWW-Authenticate header
    oauth2-plugin-> oauth2-plugin: Get Bearer token from Reqest Authorization header
    oauth2-plugin-> oauth2-plugin: Extract claim_token and format from Request UMA_DATA header
    oauth2-plugin->Kong-Cache: Lookup bearer token
    opt token found
        opt token is RPT
            oauth2-plugin->oxd-web: get_rpt(oxd-id, ticket, RPT, claims_token, claims_token_format)
        end
        opt token is AT
            oauth2-plugin->oxd-web: get_rpt(oxd-id, ticket, claims_token, claims_token_format)
        end

        oxd-web<->OP:
        opt oxd-web returns RPT
            oauth2-plugin->Kong-Cache: write "RPT": {"access_token":"..."}
        end
        opt oxd-web returns anything other then RPT
            oauth2-plugin->client: 403 Forbidden (add descriptive error msg to new header KONG_UMA_ERROR)
        end

    end
end