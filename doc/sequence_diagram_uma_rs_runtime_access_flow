title Gluu OAuth2 RS access phase

Kong Proxy->gluu-oauth2-rs: ***** call "access" event for Kong plugin priority 998  *****

gluu-oauth2-rs->gluu-oauth2-rs: Get token from Authorization Header

alt no token present
    note over gluu-oauth2-rs, Kong Proxy: not possible... oauth-client plugin requires token
    gluu-oauth2-rs->Kong Proxy: 401/Unauthorized + ticket
end

kong-cache<->gluu-oauth2-rs: token cache data
opt token already authorized for this path/method
    gluu-oauth2-rs->Kong Proxy: return
end

gluu-oauth2-rs->kong-cache: Lookup oauth2-client plugin cache

alt oauth2-client cache found
    opt mode == UMA
        gluu-oauth2-rs->Kong Proxy: 401/Unauthorized - Please enable Mix mode
    end
else cache not found
    opt mode == MIX
        gluu-oauth2-rs->Kong Proxy: 401/Unauthorized - Please enable UMA mode
    end
    gluu-oauth2-rs->oxd: Introspect RPT
    opt active == false
        gluu-oauth2-rs->Kong Proxy: 401/Unauthorized - Token inactive
    end
end

opt mode == UMA
    gluu-oauth2-rs->oxd: call check_access(token)
end

opt mode == MIX
    alt claim_token in header
        gluu-oauth2-rs->oxd: get_rpt token with claim_token
    else
        gluu-oauth2-rs->oxd: get_rpt
    end
    gluu-oauth2-rs->oxd: check_access(token)
end

note over gluu-oauth2-rs
    Next step to check response of UMA access
end note

opt granted
    gluu-oauth2-rs->kong-cache: token["permissions"] = [ {"path":"/profile", "methods": ["GET", "POST"], path_protected = true } , ...]
    gluu-oauth2-rs->Kong Proxy: Success
end
opt invalid_request - when path is not protected
    opt allow_unprotected_path = false
        gluu-oauth2-rs->Kong Proxy: 401/Unauthorized
    end
    gluu-oauth2-rs->kong-cache: token["permissions"] = [ {"path":"/profile", "methods": ["GET", "POST"], path_protected = false } , ...]
    gluu-oauth2-rs->gluu-oauth2-rs: Add UMA-WARNING header - "Path is not protected"
    gluu-oauth2-rs->Kong Proxy: Success
end
opt denied or error
    gluu-oauth2-rs->Kong Proxy: 403/Forbidden
end
