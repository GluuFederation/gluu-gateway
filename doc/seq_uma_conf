title Gluu UMA Auth and PEP plugin configuration

konga->kong: Create service with url: "https://demo.com"
kong->konga: Response with service object
konga->kong: Create route with service_id
kong->konga: Response with response object

note over konga
start configure Gluu-UMA-Auth plugin
end note

alt New Client
    konga->oxd: Create client(register-client)
    oxd<->OP:
    oxd->konga: Return with client credentials
else Use Existing Client
    note over konga
        User can use existing client credentials
        Enter oxd_id
        Enter client_id
        Enter client_secret
    end note
end
konga->oxd: Register resources(UMA scope_Expression)
oxd<->OP:
oxd->konga: Return oxd_id

note over konga
    Pass client credetial to plugin
end note

konga->kong: Configure Gluu-UMA-Auth plugin with [Service|Route|API|Global]
note over kong
Gluu-OAuth2-RS schema:
1. oxd_id
2. client_id
3. client_secret
4. op_url
5. oxd_url
6. anonymous
7. hide_credentials
end note
kong->kong_DB: Add Gluu-UMA-Auth
kong_DB->kong:
kong->konga: Return with Gluu-UMA-Auth config details
note over konga
End configuration for Gluu-UMA-Auth plugin
end note

note over konga
Start configuration for Gluu-UMA-PEP plugin
end note
konga->kong: Configure Gluu-UMA-PEP plugin with [Service|Route|API|Global]
konga->oxd: Register resources(UMA scope_Expression)
oxd<->OP:
oxd->konga: Return oxd_id
note over kong
Gluu-UMA-PEP schema:
1. uma_scope_expression
2. deny_by_default
end note
kong->kong_DB: Add Gluu-UMA-PEP
kong_DB->kong:
kong->konga: Return with Gluu-UMA-PEP config details
